on:
  workflow_call:
    inputs:
      is_latest:
        type: boolean
      version:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      is_latest:
        description: Whether this is the latest release
        type: boolean
      version:
        description: The version of the release
        required: true
        type: string

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        cuda-version:
          - "12.9.1"
        torch-version:
          - "2.4.1"
          - "2.5.1"
          - "2.6.0"
          - "2.7.1"
          - "2.8.0"
        python-version:
          - "3.10"
          - "3.12"
    steps:
      - uses: astral-sh/setup-uv@v6

      - id: get-wheel-filename
        run: |
          WHEEL_CUDA_VERSION="$(echo ${{ matrix.cuda-version }} | awk -F \. {'print $1 '})"
          WHEEL_PYTHON_VERSION="$(echo ${{ matrix.python-version }} | awk -F \. {'print $1 $2 '})"
          WHEEL_TORCH_VERSION="$(echo ${{ matrix.torch-version }} | awk -F \. {'print $1 "." $2'})"

          echo "wheel-filename=flash_attn-${{ inputs.version }}+cu${WHEEL_CUDA_VERSION}torch${WHEEL_TORCH_VERSION}cxx11abiFALSE-cp${WHEEL_PYTHON_VERSION}-cp${WHEEL_PYTHON_VERSION}-linux_x86_64.whl" >> "$GITHUB_OUTPUT"

      - run: |
          curl -I --fail https://github.com/Dao-AILab/flash-attention/releases/download/v${{ inputs.version }}/${{ steps.get-wheel-filename.outputs.wheel-filename }} || {
            echo "::notice ::No corresponding official build found for current matrix configuration. Skipping build."
            exit 0
          }

          curl -I --fail https://github.com/${{ github.repository }}/releases/download/v${{ inputs.version }}/${{ steps.get-wheel-filename.outputs.wheel-filename }} && {
            echo "::notice ::Wheel already exists in the release. Skipping build."
            exit 0
          } || true

          conda create -p conda_env \
            python=${{ matrix.python-version }} \
            nvidia::cuda=${{ matrix.cuda-version }}

          eval "$(conda shell.bash hook)"
          conda activate ./conda_env

          uv venv --python ${{ matrix.python-version }}
          uv pip install \
            ninja \
            packaging \
            pip \
            psutil \
            setuptools \
            wheel
          uv pip install \
            torch==${{ matrix.torch-version }}

          FLASH_ATTENTION_FORCE_BUILD=TRUE srun \
            --account $VILA_SLURM_ACCOUNT \
            --partition cpu \
            --time 1-00:00:00 \
            uv run pip wheel --no-build-isolation --no-deps --verbose \
              flash-attn==${{ inputs.version }}

          test $(ls *.whl | wc -l) -eq 1
          mv *.whl ${{ steps.get-wheel-filename.outputs.wheel-filename }}

      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: ignore
          name: ${{ steps.get-wheel-filename.outputs.wheel-filename }}
          path: ${{ steps.get-wheel-filename.outputs.wheel-filename }}
