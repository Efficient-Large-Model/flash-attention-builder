on:
  workflow_call:
    inputs:
      is_latest:
        type: boolean
      version:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      is_latest:
        description: Whether this is the latest release
        type: boolean
      version:
        description: The version of the release
        required: true
        type: string

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        cuda-version:
          - "12.9.1"
        torch-version:
          - "2.4.1"
          - "2.5.1"
          - "2.6.0"
          - "2.7.1"
          - "2.8.0"
        python-version:
          - "3.10"
          - "3.12"
    steps:
      - id: get-wheel-filename
        run: |
          WHEEL_CUDA_VERSION="$(echo ${{ matrix.cuda-version }} | awk -F. '{print $1}')"
          WHEEL_PYTHON_VERSION="$(echo ${{ matrix.python-version }} | awk -F. '{print $1 $2}')"
          WHEEL_TORCH_VERSION="$(echo ${{ matrix.torch-version }} | awk -F. '{print $1 "." $2}')"

          echo "wheel-filename=flash_attn-${{ inputs.version }}+cu${WHEEL_CUDA_VERSION}torch${WHEEL_TORCH_VERSION}cxx11abiFALSE-cp${WHEEL_PYTHON_VERSION}-cp${WHEEL_PYTHON_VERSION}-linux_x86_64.whl" >> "$GITHUB_OUTPUT"

      - continue-on-error: true
        run: |
          curl -Is --fail https://github.com/Dao-AILab/flash-attention/releases/download/v${{ inputs.version }}/${{ steps.get-wheel-filename.outputs.wheel-filename }}

      - if: ${{ success() }}
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: ${{ matrix.python-version }}

      - if: ${{ success() }}
        run: |
          uv pip install \
            ninja \
            packaging \
            pip \
            psutil \
            setuptools \
            torch==${{ matrix.torch-version }} \
            wheel

      - if: ${{ success() }}
        run: |
          FLASH_ATTENTION_FORCE_BUILD=TRUE srun \
            --account $VILA_SLURM_ACCOUNT \
            --partition cpu \
            --time 1-00:00:00 \
            uv run pip wheel --no-build-isolation --no-deps --verbose \
              flash-attn==${{ inputs.version }}

      - if: ${{ success() }}
        run: |
          ls flash_attn-*.whl | xargs -I {} mv {} ${{ steps.get-wheel-filename.outputs.wheel-filename }}

      - if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get-wheel-filename.outputs.wheel-filename }}
          path: ${{ steps.get-wheel-filename.outputs.wheel-filename }}
