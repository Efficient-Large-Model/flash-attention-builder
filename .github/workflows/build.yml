on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: The version of the release
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        torch-version:
          - "2.4.1"
          - "2.5.1"
          - "2.6.0"
          - "2.7.1"
          - "2.8.0"
        python-version:
          - "3.10"
          - "3.12"
    steps:
      - uses: Jimver/cuda-toolkit@v0.2.27
        with:
          cuda: "12.9.1"
          linux-local-args: '["--toolkit"]'
          method: "network"
          sub-packages: '["nvcc"]'

      - uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: ${{ matrix.python-version }}

      - run: |
          uv pip install \
            ninja \
            packaging \
            pip \
            psutil \
            setuptools \
            torch==${{ matrix.torch-version }} \
            wheel

      - run: |
          FLASH_ATTENTION_FORCE_BUILD=TRUE pip wheel --no-build-isolation --no-deps --verbose \
            flash-attn==${{ inputs.version }}

      - id: rename-whl
        run: |
          cuda_version="$(cat /usr/local/cuda/version.json | jq -r '.cuda.version' | awk -F. '{print $1}')"
          torch_version="$(echo ${{ matrix.torch-version }} | awk -F. '{print $1 "." $2}')"

          old_whl="$(ls *.whl)"
          new_whl="$(echo $old_whl | sed "s/-${{ inputs.version }}-/-${{ inputs.version }}+cu${cuda_version}torch${torch_version}cxx11abiFALSE-/")"
          mv "$old_whl" "$new_whl"

          echo "whl-filename=$new_whl" >> "${GITHUB_OUTPUT}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.rename-whl.outputs.whl-filename }}
          path: ${{ steps.rename-whl.outputs.whl-filename }}
