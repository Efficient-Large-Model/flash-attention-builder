on:
  push:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda-version:
          - "12.9.1"
        flash-attn-version:
          - "2.8.2"
        python-version:
          - "3.10"
          - "3.12"
        torch-version:
          - "2.7.1"
    steps:
      - run: |
          docker run \
            --mount type=bind,source=${{ github.workspace }},target=/workspace \
            --rm \
            --workdir /workspace \
            nvcr.io/nvidia/cuda:${{ matrix.cuda-version }}-devel-ubuntu20.04 \
            bash -c '
              apt-get update
              apt-get install -y --no-install-recommends \
                curl

              curl -LsSf https://astral.sh/uv/install.sh | sh
              source $HOME/.local/bin/env

              uv venv --python ${{ matrix.python-version }}
              uv pip install \
                ninja \
                packaging \
                pip \
                psutil \
                torch==${{ matrix.torch-version }}

              uv run pip wheel --no-build-isolation --no-deps \
                flash-attn==${{ matrix.flash-attn-version }}
            '

      - run: |
          original_name=$(ls flash_attn-${{ matrix.flash-attn-version }}-cp3*-cp3*-linux_x86_64.whl | head -n 1)
          new_name=$(echo $original_name | sed "s/^flash_attn-${{ matrix.flash-attn-version }}/flash_attn-${{ matrix.flash-attn-version }}+cuda${{ matrix.cuda-version }}torch${{ matrix.torch-version }}/")

          mv $original_name $new_name

      - uses: softprops/action-gh-release@v2
        with:
          files: |
            flash_attn-${{ matrix.flash-attn-version }}+cuda${{ matrix.cuda-version }}torch${{ matrix.torch-version }}-cp3*-cp3*-linux_x86_64.whl
          tag_name: v${{ matrix.flash-attn-version }}
